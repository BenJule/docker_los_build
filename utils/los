#!/bin/bash
#
# Simple LOS wrapper to run commands in an LOS docker container
#
# Author: Kyle Manna <benlue@s3root.ovh>
#

set -e

# Override from environment

LOS_IMAGE=${LOS_IMAGE:-benlue/los-build}
LOS_ARGS=${LOS_ARGS:---rm -it}

LOS_VOL=${LOS_VOL:-~/los-root}
LOS_VOL=${LOS_VOL%/} # Trim trailing slash if needed
LOS_VOL_LOS=${LOS_VOL_LOS:-$LOS_VOL/los}
LOS_VOL_LOS=${LOS_VOL_LOS%/} # Trim trailing slash if needed
LOS_VOL_CCACHE=${LOS_VOL_CCACHE:-$LOS_VOL/ccache}
LOS_VOL_CCACHE=${LOS_VOL_CCACHE%/} # Trim trailing slash if needed

# Convenience function
function los_create_dir_if_needed {
  directory=$1
  msg="los: Checking if $directory exists"
  echo "$msg"
  if [ ! -d "$directory" ]; then
    echo "$msg - unexistent"
    msg="Creating $directory"
    echo "$msg"
    mkdir -p $directory
  fi
  echo "$msg - ok"
}

# Create LOS_VOL_LOS
los_create_dir_if_needed $LOS_VOL_LOS
los_create_dir_if_needed $LOS_VOL_CCACHE

uid=$(id -u)

# Set uid and gid to match host current user as long as NOT root
if [ $uid -ne "0" ]; then
    LOS_HOST_ID_ARGS="-e USER_ID=$uid -e GROUP_ID=$(id -g)"
fi

if [ -S "$SSH_AUTH_SOCK" ]; then
    SSH_AUTH_ARGS="-v $SSH_AUTH_SOCK:/tmp/ssh_auth -e SSH_AUTH_SOCK=/tmp/ssh_auth"
fi

echo ""

docker run $LOS_ARGS $LOS_HOST_ID_ARGS $SSH_AUTH_ARGS $LOS_EXTRA_ARGS \
    -v "$LOS_VOL_LOS:/los" -v "$LOS_VOL_CCACHE:/tmp/ccache" \
    $LOS_IMAGE $@